export const how_to_explain_tdd = [
    "Helps allow for the client to change his/her mind about the direction of the product with minimal cost",
    "Helps us ensure we're really building for the client what we say/ think we are",
    "Helps ease the ultimate transition of the codebase to the clients team; makes the code more intelligible to a new set of developers (increases bus count",
    "Helps achieve a more predictable pace which reduces the risk associated with meeting deadlines",
    "Builds executable documentation of the intended behavior of the application",
    "Greater ROI for the client: time spent developing debts a guarantee of quality",
    "Cost of development is more constant, with fewer fluctuations due to bug fixing firefighting activity: pass as you go",
    "Cost of change is lower - client has more of an ability to change mind without incurring a large cost",
    "Makes it more possible to release whenever which add ability to get frequent feedback",
    "Allows for aggressive changes when working on performance improvements without risk of breaking the application in unforeseen ways",
    "Reduces cost of long term maintenance",
    "Prevents regressions - bugs locked down forever as soon as they're uncovered",
    "TDD trades ongoing increments of time to avoid unbounded amounts of time delay later",
    "Tests take the place of big (wrong) documents",
    "Reduce cost of QA, QA'ers have a more interesting role",
    "Decrease risk of poor initial design creating significant negative impact over time",
    "Supports refactoring to create functionality faster - much less time spent debugging while developing a feature",
    "Reduces cost of integration between systems/tiers of code - tests prove that a system works at its boundaries, so interaction problems are more easily tracked down",
    "Each piece of the software works",
    "Reduces risk of a big component not working for long periods",
    "With TDD you don't get to the point where you cant make changes for fear of breaking the existing application",
    "Provides the ability to verify code on different/upgraded environments/hardware",
    "Client doesnt get stuck with a big slow test suite; we're more likely to keep tests fast if we run them all the time, as TDD calls for",
    "Prevents code rot - no individual or aggregate piece of code is unwieldy",
    "Provides a default way to get going on day 1,How do explain TDD to clients",
]

